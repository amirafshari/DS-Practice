
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 5, 6, 7, 8]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list = [i for i in range(9)]\n",
    "list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "matrix([[0, 1, 2, 3, 4, 5, 6, 7, 8]])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.matrix(list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 1, 2],\n",
       "       [3, 4, 5],\n",
       "       [6, 7, 8]])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = np.array(list).reshape(3,3)\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "matrix([[0, 1, 2],\n",
       "        [3, 4, 5],\n",
       "        [6, 7, 8]])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m = np.matrix(a)\n",
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[3.0, 4.0, 5.0], [1.0, 4.0, 7.0], 4.0]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean = [a.mean(0).tolist(), a.mean(1).tolist(), a.mean()]\n",
    "mean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[6.0, 6.0, 6.0],\n",
       " [0.6666666666666666, 0.6666666666666666, 0.6666666666666666],\n",
       " 6.666666666666667]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "variance = [a.var(0).tolist(), a.var(1).tolist(), a.var()]\n",
    "variance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[2.449489742783178, 2.449489742783178, 2.449489742783178],\n",
       " [0.816496580927726, 0.816496580927726, 0.816496580927726],\n",
       " 2.581988897471611]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std = [a.std(0).tolist(), a.std(1).tolist(), a.std()]\n",
    "std"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[6, 7, 8], [2, 5, 8], 8]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "maximum = [a.max(0).tolist(), a.max(1).tolist(), a.max()]\n",
    "maximum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[array([0, 1, 2]), array([0, 3, 6]), 0]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "minimum = [a.min(0), a.min(1), a.min()]\n",
    "minimum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[9, 12, 15], [3, 12, 21], 36]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sums = [a.sum(0).tolist(), a.sum(1).tolist(), a.sum()]\n",
    "sums"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def calculate(list):\n",
    "  try:\n",
    "    a = np.array(list).reshape(3,3)\n",
    "    mean = [a.mean(0).tolist(), a.mean(1).tolist(), a.mean()]\n",
    "    variance = [a.var(0).tolist(), a.var(1).tolist(), a.var()]\n",
    "    std = [a.std(0).tolist(), a.std(1).tolist(), a.std()]\n",
    "    maximum = [a.max(0).tolist(), a.max(1).tolist(), a.max()]\n",
    "    minimum = [a.min(0).tolist(), a.min(1).tolist(), a.min()]\n",
    "    sums = [a.sum(0).tolist(), a.sum(1).tolist(), a.sum()]\n",
    "    \n",
    "    calculations = {\n",
    "    'mean': mean,\n",
    "    'variance': variance,\n",
    "    'standard deviation': std,\n",
    "    'max': maximum,\n",
    "    'min': minimum,\n",
    "    'sum': sums,\n",
    "    }\n",
    "  except ValueError:\n",
    "    return 'List must contain nine numbers.'\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "  return calculations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'mean': [[5.0, 5.0, 5.333333333333333],\n",
       "  [2.3333333333333335, 6.666666666666667, 6.333333333333333],\n",
       "  5.111111111111111],\n",
       " 'variance': [[6.0, 4.666666666666667, 6.888888888888889],\n",
       "  [0.22222222222222224, 2.888888888888889, 2.888888888888889],\n",
       "  5.876543209876543],\n",
       " 'standard deviation': [[2.449489742783178,\n",
       "   2.160246899469287,\n",
       "   2.6246692913372702],\n",
       "  [0.4714045207910317, 1.699673171197595, 1.699673171197595],\n",
       "  2.4241582476968255],\n",
       " 'max': [[8, 7, 9], [3, 9, 8], 9],\n",
       " 'min': [[2, 2, 3], [2, 5, 4], 2],\n",
       " 'sum': [[15, 15, 16], [7, 20, 19], 46]}"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "calculate([2,2,3,5,6,9,8,7,4])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
{"mode":"full","isActive":false}
